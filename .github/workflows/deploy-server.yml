name: Deploy server
on:
  repository_dispatch:
    types: [ deploy-server ]

jobs:
  get-data:
    name: Get data
    if: ${{ github.event.client_payload.github.event_name != 'create' || contains(github.event.client_payload.github.ref, 'server-v') }}
    runs-on: ubuntu-latest
    outputs:
      env: ${{ steps.get_env.outputs.env }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js 16.x
        uses: actions/setup-node@v3
        with:
          node-version: 19

      - name: Install npm dependencies
        run: npm install --prefix .github/actions

      - name: Get tag
        id: get_tag
        uses: ./.github/actions/tag-provider
        with:
          ghRef: ${{ github.event.client_payload.github.ref }}

      - name: Get env
        id: get_env
        uses: ./.github/actions/env-provider
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          envFromInput: ${{ github.event.client_payload.enviroment }}
      - name: Output vars
        run: |
          echo "Env: ${{ steps.get_env.outputs.env }}"
          echo "Ref: ${{ github.event.client_payload.github.ref }}"
          echo "Input env: ${{ github.event.client_payload.enviroment }}"

  deploy-server:
    name: Deploy server
    needs:
      - get-data
    environment: ${{ needs.get-data.outputs.env }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Install Railway
        run: npm i -g @railway/cli@v2.1.0

      - name: Deploy
        run: railway up -s server -v
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
