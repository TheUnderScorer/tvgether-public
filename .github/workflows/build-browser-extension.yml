name: Build browser extension

on:
  repository_dispatch:
    types: [ build-browser-extension ]

jobs:
  get-data:
    if: ${{ github.event.client_payload.github.event_name != 'create' || contains(github.event.client_payload.github.ref, 'browser-extension-v') }}
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.get_tag.outputs.tag }}
      env: ${{ steps.get_env.outputs.env }}
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Install npm dependencies
        run: npm install --prefix .github/actions

      - name: Get tag
        id: get_tag
        uses: ./.github/actions/tag-provider
        with:
          ghRef: ${{ github.event.client_payload.github.ref }}
          tagFromInput: ${{ github.event.client_payload.tag }}

      - name: Get env
        id: get_env
        uses: ./.github/actions/env-provider
        with:
          tag: ${{ steps.get_tag.outputs.tag }}
          envFromInput: ${{ github.event.client_payload.enviroment }}

      - name: Output vars
        run: |
          echo "Tag: ${{ steps.get_tag.outputs.tag }}"
          echo "Env: ${{ steps.get_env.outputs.env }}"
          echo "Ref: ${{ github.event.client_payload.github.ref }}"

  build:
    name: Build browser extension
    needs:
      - get-data
    environment: ${{ needs.get-data.outputs.env }}
    timeout-minutes: 30
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_ADMIN_TOKEN }}
          fetch-depth: 0
          repository: ${{ secrets.REPOSITORY }}
          ref: ${{ github.event.client_payload.github.ref }}

      - name: Set Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '19'

      - name: Install npm dependencies
        run: npm install && npm install --prefix .github/actions

      - name: Create .env file
        run: |
          echo "NX_SERVER_URL=${{ secrets.SERVER_URL }}" >> .env
          echo "NX_WEBSITE_URL=${{ secrets.WEBSITE_URL }}" >> .env
          echo "NX_GIPHY_API_KEY=${{ secrets.GIPHY_API_KEY }}" >> .env
          echo "NX_TRACKING_PROJECT_TOKEN=${{ secrets.TRACKING_PROJECT_TOKEN }}" >> .env

      - name: Build
        run: npx nx run browser-extension:build:production --skip-nx-cache
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_TOKEN }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: browser-extension
          path: dist/apps/browser-extension

      - name: Upload file to release
        if: ${{ needs.get-data.outputs.tag }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_ADMIN_TOKEN }}
          file: dist/apps/browser-extension.zip
          asset_name: browser-extension.zip
          tag: ${{ needs.get-data.outputs.tag }}
          overwrite: true
          repo_name: ${{ secrets.REPOSITORY }}

      - name: Publish extension
        if: ${{ !contains(needs.get-data.outputs.tag , 'test') }}
        run: npx nx run browser-extension:publish
        env:
          EXTENSION_ID: ${{ secrets.EXTENSION_ID }}
          CLIENT_ID: ${{ secrets.UPLOAD_EXTENSION_CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.UPLOAD_EXTENSION_SECRET }}
          REFRESH_TOKEN: ${{ secrets.UPLOAD_EXTENSION_REFRESH_TOKEN }}

